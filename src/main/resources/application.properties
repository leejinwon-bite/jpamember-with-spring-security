spring.application.name=jpamember

server.port = 8011

# Database URL

spring.datasource.url = jdbc:mysql://localhost:3307/member2?autoReconnect=true&serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = 1234
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver

# Thymeleaf config(ì¤ì )

spring.thymeleaf.prefix = classpath:templates/thymeleaf/
spring.thymeleaf.check-template-location = true
spring.thymeleaf.suffix = .html
spring.thymeleaf.mode = HTML
spring.thymeleaf.cache = false

#JPA ì¤ì 
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# spring security 설정 코드 -> 상당수의 많은 필터가 단계 적으로 동작하기에 문제 발생시 어떤 필터에서 어떤 문제가 있는지 로그 설정을 최대로 낮게 설정하는 코드.
# 적용후 페이지 호출하면 많은 양의 FilterChainProxy 로그들을 볼 수 있음. 
logging.level.org.springframework=info
logging.level.com.jpamember.springboot=debug
logging.level.org.springframework.security=trace

# Logging level configuration
logging.level.root=info
logging.level.com.yourpackage=debug









